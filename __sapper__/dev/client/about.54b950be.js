import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, V as svg_element, b as claim_element, f as children, g as detach_dev, k as attr_dev, l as add_location, m as insert_dev, n as append_dev, L as noop, a as space, e as element, t as text, C as create_component, J as query_selector_all, h as claim_space, j as claim_text, D as claim_component, E as mount_component, p as transition_in, q as transition_out, G as destroy_component } from './client.33602f97.js';

/* node_modules/svelte-feather-icons/src/icons/GlobeIcon.svelte generated by Svelte v3.38.1 */

const file$3 = "node_modules/svelte-feather-icons/src/icons/GlobeIcon.svelte";

function create_fragment$3(ctx) {
	let svg;
	let circle;
	let line;
	let path;
	let svg_class_value;

	const block = {
		c: function create() {
			svg = svg_element("svg");
			circle = svg_element("circle");
			line = svg_element("line");
			path = svg_element("path");
			this.h();
		},
		l: function claim(nodes) {
			svg = claim_element(
				nodes,
				"svg",
				{
					xmlns: true,
					width: true,
					height: true,
					fill: true,
					viewBox: true,
					stroke: true,
					"stroke-width": true,
					"stroke-linecap": true,
					"stroke-linejoin": true,
					class: true
				},
				1
			);

			var svg_nodes = children(svg);
			circle = claim_element(svg_nodes, "circle", { cx: true, cy: true, r: true }, 1);
			children(circle).forEach(detach_dev);
			line = claim_element(svg_nodes, "line", { x1: true, y1: true, x2: true, y2: true }, 1);
			children(line).forEach(detach_dev);
			path = claim_element(svg_nodes, "path", { d: true }, 1);
			children(path).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(circle, "cx", "12");
			attr_dev(circle, "cy", "12");
			attr_dev(circle, "r", "10");
			add_location(circle, file$3, 13, 242, 528);
			attr_dev(line, "x1", "2");
			attr_dev(line, "y1", "12");
			attr_dev(line, "x2", "22");
			attr_dev(line, "y2", "12");
			add_location(line, file$3, 13, 282, 568);
			attr_dev(path, "d", "M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z");
			add_location(path, file$3, 13, 326, 612);
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "width", /*size*/ ctx[0]);
			attr_dev(svg, "height", /*size*/ ctx[0]);
			attr_dev(svg, "fill", "none");
			attr_dev(svg, "viewBox", "0 0 24 24");
			attr_dev(svg, "stroke", "currentColor");
			attr_dev(svg, "stroke-width", /*strokeWidth*/ ctx[1]);
			attr_dev(svg, "stroke-linecap", "round");
			attr_dev(svg, "stroke-linejoin", "round");
			attr_dev(svg, "class", svg_class_value = "feather feather-globe " + /*customClass*/ ctx[2]);
			add_location(svg, file$3, 13, 0, 286);
		},
		m: function mount(target, anchor) {
			insert_dev(target, svg, anchor);
			append_dev(svg, circle);
			append_dev(svg, line);
			append_dev(svg, path);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*size*/ 1) {
				attr_dev(svg, "width", /*size*/ ctx[0]);
			}

			if (dirty & /*size*/ 1) {
				attr_dev(svg, "height", /*size*/ ctx[0]);
			}

			if (dirty & /*strokeWidth*/ 2) {
				attr_dev(svg, "stroke-width", /*strokeWidth*/ ctx[1]);
			}

			if (dirty & /*customClass*/ 4 && svg_class_value !== (svg_class_value = "feather feather-globe " + /*customClass*/ ctx[2])) {
				attr_dev(svg, "class", svg_class_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(svg);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("GlobeIcon", slots, []);
	let { size = "100%" } = $$props;
	let { strokeWidth = 2 } = $$props;
	let { class: customClass = "" } = $$props;

	if (size !== "100%") {
		size = size.slice(-1) === "x"
		? size.slice(0, size.length - 1) + "em"
		: parseInt(size) + "px";
	}

	const writable_props = ["size", "strokeWidth", "class"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<GlobeIcon> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("size" in $$props) $$invalidate(0, size = $$props.size);
		if ("strokeWidth" in $$props) $$invalidate(1, strokeWidth = $$props.strokeWidth);
		if ("class" in $$props) $$invalidate(2, customClass = $$props.class);
	};

	$$self.$capture_state = () => ({ size, strokeWidth, customClass });

	$$self.$inject_state = $$props => {
		if ("size" in $$props) $$invalidate(0, size = $$props.size);
		if ("strokeWidth" in $$props) $$invalidate(1, strokeWidth = $$props.strokeWidth);
		if ("customClass" in $$props) $$invalidate(2, customClass = $$props.customClass);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [size, strokeWidth, customClass];
}

class GlobeIcon extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, { size: 0, strokeWidth: 1, class: 2 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "GlobeIcon",
			options,
			id: create_fragment$3.name
		});
	}

	get size() {
		throw new Error("<GlobeIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set size(value) {
		throw new Error("<GlobeIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get strokeWidth() {
		throw new Error("<GlobeIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set strokeWidth(value) {
		throw new Error("<GlobeIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get class() {
		throw new Error("<GlobeIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set class(value) {
		throw new Error("<GlobeIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* node_modules/svelte-feather-icons/src/icons/UsersIcon.svelte generated by Svelte v3.38.1 */

const file$2 = "node_modules/svelte-feather-icons/src/icons/UsersIcon.svelte";

function create_fragment$2(ctx) {
	let svg;
	let path0;
	let circle;
	let path1;
	let path2;
	let svg_class_value;

	const block = {
		c: function create() {
			svg = svg_element("svg");
			path0 = svg_element("path");
			circle = svg_element("circle");
			path1 = svg_element("path");
			path2 = svg_element("path");
			this.h();
		},
		l: function claim(nodes) {
			svg = claim_element(
				nodes,
				"svg",
				{
					xmlns: true,
					width: true,
					height: true,
					fill: true,
					viewBox: true,
					stroke: true,
					"stroke-width": true,
					"stroke-linecap": true,
					"stroke-linejoin": true,
					class: true
				},
				1
			);

			var svg_nodes = children(svg);
			path0 = claim_element(svg_nodes, "path", { d: true }, 1);
			children(path0).forEach(detach_dev);
			circle = claim_element(svg_nodes, "circle", { cx: true, cy: true, r: true }, 1);
			children(circle).forEach(detach_dev);
			path1 = claim_element(svg_nodes, "path", { d: true }, 1);
			children(path1).forEach(detach_dev);
			path2 = claim_element(svg_nodes, "path", { d: true }, 1);
			children(path2).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(path0, "d", "M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2");
			add_location(path0, file$2, 13, 242, 528);
			attr_dev(circle, "cx", "9");
			attr_dev(circle, "cy", "7");
			attr_dev(circle, "r", "4");
			add_location(circle, file$2, 13, 301, 587);
			attr_dev(path1, "d", "M23 21v-2a4 4 0 0 0-3-3.87");
			add_location(path1, file$2, 13, 338, 624);
			attr_dev(path2, "d", "M16 3.13a4 4 0 0 1 0 7.75");
			add_location(path2, file$2, 13, 382, 668);
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "width", /*size*/ ctx[0]);
			attr_dev(svg, "height", /*size*/ ctx[0]);
			attr_dev(svg, "fill", "none");
			attr_dev(svg, "viewBox", "0 0 24 24");
			attr_dev(svg, "stroke", "currentColor");
			attr_dev(svg, "stroke-width", /*strokeWidth*/ ctx[1]);
			attr_dev(svg, "stroke-linecap", "round");
			attr_dev(svg, "stroke-linejoin", "round");
			attr_dev(svg, "class", svg_class_value = "feather feather-users " + /*customClass*/ ctx[2]);
			add_location(svg, file$2, 13, 0, 286);
		},
		m: function mount(target, anchor) {
			insert_dev(target, svg, anchor);
			append_dev(svg, path0);
			append_dev(svg, circle);
			append_dev(svg, path1);
			append_dev(svg, path2);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*size*/ 1) {
				attr_dev(svg, "width", /*size*/ ctx[0]);
			}

			if (dirty & /*size*/ 1) {
				attr_dev(svg, "height", /*size*/ ctx[0]);
			}

			if (dirty & /*strokeWidth*/ 2) {
				attr_dev(svg, "stroke-width", /*strokeWidth*/ ctx[1]);
			}

			if (dirty & /*customClass*/ 4 && svg_class_value !== (svg_class_value = "feather feather-users " + /*customClass*/ ctx[2])) {
				attr_dev(svg, "class", svg_class_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(svg);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("UsersIcon", slots, []);
	let { size = "100%" } = $$props;
	let { strokeWidth = 2 } = $$props;
	let { class: customClass = "" } = $$props;

	if (size !== "100%") {
		size = size.slice(-1) === "x"
		? size.slice(0, size.length - 1) + "em"
		: parseInt(size) + "px";
	}

	const writable_props = ["size", "strokeWidth", "class"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<UsersIcon> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("size" in $$props) $$invalidate(0, size = $$props.size);
		if ("strokeWidth" in $$props) $$invalidate(1, strokeWidth = $$props.strokeWidth);
		if ("class" in $$props) $$invalidate(2, customClass = $$props.class);
	};

	$$self.$capture_state = () => ({ size, strokeWidth, customClass });

	$$self.$inject_state = $$props => {
		if ("size" in $$props) $$invalidate(0, size = $$props.size);
		if ("strokeWidth" in $$props) $$invalidate(1, strokeWidth = $$props.strokeWidth);
		if ("customClass" in $$props) $$invalidate(2, customClass = $$props.customClass);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [size, strokeWidth, customClass];
}

class UsersIcon extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { size: 0, strokeWidth: 1, class: 2 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "UsersIcon",
			options,
			id: create_fragment$2.name
		});
	}

	get size() {
		throw new Error("<UsersIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set size(value) {
		throw new Error("<UsersIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get strokeWidth() {
		throw new Error("<UsersIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set strokeWidth(value) {
		throw new Error("<UsersIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get class() {
		throw new Error("<UsersIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set class(value) {
		throw new Error("<UsersIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* node_modules/svelte-feather-icons/src/icons/WatchIcon.svelte generated by Svelte v3.38.1 */

const file$1 = "node_modules/svelte-feather-icons/src/icons/WatchIcon.svelte";

function create_fragment$1(ctx) {
	let svg;
	let circle;
	let polyline;
	let path;
	let svg_class_value;

	const block = {
		c: function create() {
			svg = svg_element("svg");
			circle = svg_element("circle");
			polyline = svg_element("polyline");
			path = svg_element("path");
			this.h();
		},
		l: function claim(nodes) {
			svg = claim_element(
				nodes,
				"svg",
				{
					xmlns: true,
					width: true,
					height: true,
					fill: true,
					viewBox: true,
					stroke: true,
					"stroke-width": true,
					"stroke-linecap": true,
					"stroke-linejoin": true,
					class: true
				},
				1
			);

			var svg_nodes = children(svg);
			circle = claim_element(svg_nodes, "circle", { cx: true, cy: true, r: true }, 1);
			children(circle).forEach(detach_dev);
			polyline = claim_element(svg_nodes, "polyline", { points: true }, 1);
			children(polyline).forEach(detach_dev);
			path = claim_element(svg_nodes, "path", { d: true }, 1);
			children(path).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(circle, "cx", "12");
			attr_dev(circle, "cy", "12");
			attr_dev(circle, "r", "7");
			add_location(circle, file$1, 13, 242, 528);
			attr_dev(polyline, "points", "12 9 12 12 13.5 13.5");
			add_location(polyline, file$1, 13, 281, 567);
			attr_dev(path, "d", "M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83");
			add_location(path, file$1, 13, 332, 618);
			attr_dev(svg, "xmlns", "http://www.w3.org/2000/svg");
			attr_dev(svg, "width", /*size*/ ctx[0]);
			attr_dev(svg, "height", /*size*/ ctx[0]);
			attr_dev(svg, "fill", "none");
			attr_dev(svg, "viewBox", "0 0 24 24");
			attr_dev(svg, "stroke", "currentColor");
			attr_dev(svg, "stroke-width", /*strokeWidth*/ ctx[1]);
			attr_dev(svg, "stroke-linecap", "round");
			attr_dev(svg, "stroke-linejoin", "round");
			attr_dev(svg, "class", svg_class_value = "feather feather-watch " + /*customClass*/ ctx[2]);
			add_location(svg, file$1, 13, 0, 286);
		},
		m: function mount(target, anchor) {
			insert_dev(target, svg, anchor);
			append_dev(svg, circle);
			append_dev(svg, polyline);
			append_dev(svg, path);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*size*/ 1) {
				attr_dev(svg, "width", /*size*/ ctx[0]);
			}

			if (dirty & /*size*/ 1) {
				attr_dev(svg, "height", /*size*/ ctx[0]);
			}

			if (dirty & /*strokeWidth*/ 2) {
				attr_dev(svg, "stroke-width", /*strokeWidth*/ ctx[1]);
			}

			if (dirty & /*customClass*/ 4 && svg_class_value !== (svg_class_value = "feather feather-watch " + /*customClass*/ ctx[2])) {
				attr_dev(svg, "class", svg_class_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(svg);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("WatchIcon", slots, []);
	let { size = "100%" } = $$props;
	let { strokeWidth = 2 } = $$props;
	let { class: customClass = "" } = $$props;

	if (size !== "100%") {
		size = size.slice(-1) === "x"
		? size.slice(0, size.length - 1) + "em"
		: parseInt(size) + "px";
	}

	const writable_props = ["size", "strokeWidth", "class"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<WatchIcon> was created with unknown prop '${key}'`);
	});

	$$self.$$set = $$props => {
		if ("size" in $$props) $$invalidate(0, size = $$props.size);
		if ("strokeWidth" in $$props) $$invalidate(1, strokeWidth = $$props.strokeWidth);
		if ("class" in $$props) $$invalidate(2, customClass = $$props.class);
	};

	$$self.$capture_state = () => ({ size, strokeWidth, customClass });

	$$self.$inject_state = $$props => {
		if ("size" in $$props) $$invalidate(0, size = $$props.size);
		if ("strokeWidth" in $$props) $$invalidate(1, strokeWidth = $$props.strokeWidth);
		if ("customClass" in $$props) $$invalidate(2, customClass = $$props.customClass);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [size, strokeWidth, customClass];
}

class WatchIcon extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { size: 0, strokeWidth: 1, class: 2 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "WatchIcon",
			options,
			id: create_fragment$1.name
		});
	}

	get size() {
		throw new Error("<WatchIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set size(value) {
		throw new Error("<WatchIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get strokeWidth() {
		throw new Error("<WatchIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set strokeWidth(value) {
		throw new Error("<WatchIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get class() {
		throw new Error("<WatchIcon>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set class(value) {
		throw new Error("<WatchIcon>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/about.svelte generated by Svelte v3.38.1 */
const file = "src/routes/about.svelte";

function create_fragment(ctx) {
	let t0;
	let div10;
	let div2;
	let div1;
	let div0;
	let img0;
	let img0_src_value;
	let t1;
	let p0;
	let t2;
	let t3;
	let p1;
	let t4;
	let br0;
	let t5;
	let br1;
	let t6;
	let t7;
	let h20;
	let t8;
	let t9;
	let div6;
	let div3;
	let watchicon;
	let t10;
	let p2;
	let t11;
	let t12;
	let div4;
	let globeicon;
	let t13;
	let p3;
	let t14;
	let t15;
	let div5;
	let usersicon;
	let t16;
	let p4;
	let t17;
	let t18;
	let h21;
	let t19;
	let t20;
	let div9;
	let div7;
	let p5;
	let t21;
	let br2;
	let t22;
	let br3;
	let t23;
	let br4;
	let t24;
	let br5;
	let t25;
	let t26;
	let div8;
	let img1;
	let img1_src_value;
	let current;
	watchicon = new WatchIcon({ props: { size: "24" }, $$inline: true });
	globeicon = new GlobeIcon({ props: { size: "24" }, $$inline: true });
	usersicon = new UsersIcon({ props: { size: "24" }, $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			div10 = element("div");
			div2 = element("div");
			div1 = element("div");
			div0 = element("div");
			img0 = element("img");
			t1 = space();
			p0 = element("p");
			t2 = text("Translate your website's/app's");
			t3 = space();
			p1 = element("p");
			t4 = text("I18next your projects. Using Langon ");
			br0 = element("br");
			t5 = text(" makes it easy. You can have\n          your ");
			br1 = element("br");
			t6 = text(" projects translated by non-developers.");
			t7 = space();
			h20 = element("h2");
			t8 = text("Why should you use Langon?");
			t9 = space();
			div6 = element("div");
			div3 = element("div");
			create_component(watchicon.$$.fragment);
			t10 = space();
			p2 = element("p");
			t11 = text("Quick translation");
			t12 = space();
			div4 = element("div");
			create_component(globeicon.$$.fragment);
			t13 = space();
			p3 = element("p");
			t14 = text("Many Languages");
			t15 = space();
			div5 = element("div");
			create_component(usersicon.$$.fragment);
			t16 = space();
			p4 = element("p");
			t17 = text("Available for all");
			t18 = space();
			h21 = element("h2");
			t19 = text("What is this platform?");
			t20 = space();
			div9 = element("div");
			div7 = element("div");
			p5 = element("p");
			t21 = text("This platform is a tool we have made");
			br2 = element("br");
			t22 = text(" to translate your projects\n        more easily.\n        ");
			br3 = element("br");
			t23 = text("There are many languages for ");
			br4 = element("br");
			t24 = text(" translating your projects.\n        last this tool ");
			br5 = element("br");
			t25 = text(" is available for everyone.");
			t26 = space();
			div8 = element("div");
			img1 = element("img");
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1myew8g\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			div10 = claim_element(nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			div2 = claim_element(div10_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img0 = claim_element(div0_nodes, "IMG", { src: true, alt: true, class: true });
			t1 = claim_space(div0_nodes);
			p0 = claim_element(div0_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t2 = claim_text(p0_nodes, "Translate your website's/app's");
			p0_nodes.forEach(detach_dev);
			t3 = claim_space(div0_nodes);
			p1 = claim_element(div0_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t4 = claim_text(p1_nodes, "I18next your projects. Using Langon ");
			br0 = claim_element(p1_nodes, "BR", {});
			t5 = claim_text(p1_nodes, " makes it easy. You can have\n          your ");
			br1 = claim_element(p1_nodes, "BR", {});
			t6 = claim_text(p1_nodes, " projects translated by non-developers.");
			p1_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t7 = claim_space(div10_nodes);
			h20 = claim_element(div10_nodes, "H2", { class: true });
			var h20_nodes = children(h20);
			t8 = claim_text(h20_nodes, "Why should you use Langon?");
			h20_nodes.forEach(detach_dev);
			t9 = claim_space(div10_nodes);
			div6 = claim_element(div10_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			div3 = claim_element(div6_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			claim_component(watchicon.$$.fragment, div3_nodes);
			t10 = claim_space(div3_nodes);
			p2 = claim_element(div3_nodes, "P", {});
			var p2_nodes = children(p2);
			t11 = claim_text(p2_nodes, "Quick translation");
			p2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t12 = claim_space(div6_nodes);
			div4 = claim_element(div6_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			claim_component(globeicon.$$.fragment, div4_nodes);
			t13 = claim_space(div4_nodes);
			p3 = claim_element(div4_nodes, "P", {});
			var p3_nodes = children(p3);
			t14 = claim_text(p3_nodes, "Many Languages");
			p3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			t15 = claim_space(div6_nodes);
			div5 = claim_element(div6_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			claim_component(usersicon.$$.fragment, div5_nodes);
			t16 = claim_space(div5_nodes);
			p4 = claim_element(div5_nodes, "P", {});
			var p4_nodes = children(p4);
			t17 = claim_text(p4_nodes, "Available for all");
			p4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			t18 = claim_space(div10_nodes);
			h21 = claim_element(div10_nodes, "H2", { class: true });
			var h21_nodes = children(h21);
			t19 = claim_text(h21_nodes, "What is this platform?");
			h21_nodes.forEach(detach_dev);
			t20 = claim_space(div10_nodes);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div7 = claim_element(div9_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			p5 = claim_element(div7_nodes, "P", {});
			var p5_nodes = children(p5);
			t21 = claim_text(p5_nodes, "This platform is a tool we have made");
			br2 = claim_element(p5_nodes, "BR", {});
			t22 = claim_text(p5_nodes, " to translate your projects\n        more easily.\n        ");
			br3 = claim_element(p5_nodes, "BR", {});
			t23 = claim_text(p5_nodes, "There are many languages for ");
			br4 = claim_element(p5_nodes, "BR", {});
			t24 = claim_text(p5_nodes, " translating your projects.\n        last this tool ");
			br5 = claim_element(p5_nodes, "BR", {});
			t25 = claim_text(p5_nodes, " is available for everyone.");
			p5_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			t26 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			img1 = claim_element(div8_nodes, "IMG", { src: true, alt: true, class: true });
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			document.title = "About";
			if (img0.src !== (img0_src_value = "/images/logo_langon_regular.svg")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "alt", "about");
			attr_dev(img0, "class", "svelte-1mzoyjs");
			add_location(img0, file, 70, 8, 1278);
			attr_dev(p0, "class", "svelte-1mzoyjs");
			add_location(p0, file, 71, 8, 1344);
			add_location(br0, file, 73, 46, 1440);
			add_location(br1, file, 74, 15, 1490);
			attr_dev(p1, "class", "svelte-1mzoyjs");
			add_location(p1, file, 72, 8, 1390);
			attr_dev(div0, "class", "about_subtag svelte-1mzoyjs");
			add_location(div0, file, 69, 6, 1243);
			attr_dev(div1, "class", "about_page borderline svelte-1mzoyjs");
			add_location(div1, file, 68, 4, 1201);
			attr_dev(div2, "class", "about_content svelte-1mzoyjs");
			add_location(div2, file, 67, 2, 1169);
			attr_dev(h20, "class", "svelte-1mzoyjs");
			add_location(h20, file, 79, 2, 1584);
			add_location(p2, file, 83, 6, 1725);
			attr_dev(div3, "class", "about_quick borderline svelte-1mzoyjs");
			add_location(div3, file, 81, 4, 1652);
			add_location(p3, file, 87, 6, 1838);
			attr_dev(div4, "class", "about_quick borderline svelte-1mzoyjs");
			add_location(div4, file, 85, 4, 1765);
			add_location(p4, file, 91, 6, 1948);
			attr_dev(div5, "class", "about_quick borderline svelte-1mzoyjs");
			add_location(div5, file, 89, 4, 1875);
			attr_dev(div6, "class", "about_using svelte-1mzoyjs");
			add_location(div6, file, 80, 2, 1622);
			attr_dev(h21, "class", "svelte-1mzoyjs");
			add_location(h21, file, 94, 2, 1995);
			add_location(br2, file, 98, 44, 2141);
			add_location(br3, file, 100, 8, 2204);
			add_location(br4, file, 100, 43, 2239);
			add_location(br5, file, 101, 23, 2296);
			add_location(p5, file, 97, 6, 2093);
			attr_dev(div7, "class", "about_info svelte-1mzoyjs");
			add_location(div7, file, 96, 4, 2062);
			if (img1.src !== (img1_src_value = "/images/home_picture.jpg")) attr_dev(img1, "src", img1_src_value);
			attr_dev(img1, "alt", "about");
			attr_dev(img1, "class", "svelte-1mzoyjs");
			add_location(img1, file, 105, 6, 2390);
			attr_dev(div8, "class", "about_picture svelte-1mzoyjs");
			add_location(div8, file, 104, 4, 2356);
			attr_dev(div9, "class", "about_platform svelte-1mzoyjs");
			add_location(div9, file, 95, 2, 2029);
			attr_dev(div10, "class", "about p-pages svelte-1mzoyjs");
			add_location(div10, file, 66, 0, 1139);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, div10, anchor);
			append_dev(div10, div2);
			append_dev(div2, div1);
			append_dev(div1, div0);
			append_dev(div0, img0);
			append_dev(div0, t1);
			append_dev(div0, p0);
			append_dev(p0, t2);
			append_dev(div0, t3);
			append_dev(div0, p1);
			append_dev(p1, t4);
			append_dev(p1, br0);
			append_dev(p1, t5);
			append_dev(p1, br1);
			append_dev(p1, t6);
			append_dev(div10, t7);
			append_dev(div10, h20);
			append_dev(h20, t8);
			append_dev(div10, t9);
			append_dev(div10, div6);
			append_dev(div6, div3);
			mount_component(watchicon, div3, null);
			append_dev(div3, t10);
			append_dev(div3, p2);
			append_dev(p2, t11);
			append_dev(div6, t12);
			append_dev(div6, div4);
			mount_component(globeicon, div4, null);
			append_dev(div4, t13);
			append_dev(div4, p3);
			append_dev(p3, t14);
			append_dev(div6, t15);
			append_dev(div6, div5);
			mount_component(usersicon, div5, null);
			append_dev(div5, t16);
			append_dev(div5, p4);
			append_dev(p4, t17);
			append_dev(div10, t18);
			append_dev(div10, h21);
			append_dev(h21, t19);
			append_dev(div10, t20);
			append_dev(div10, div9);
			append_dev(div9, div7);
			append_dev(div7, p5);
			append_dev(p5, t21);
			append_dev(p5, br2);
			append_dev(p5, t22);
			append_dev(p5, br3);
			append_dev(p5, t23);
			append_dev(p5, br4);
			append_dev(p5, t24);
			append_dev(p5, br5);
			append_dev(p5, t25);
			append_dev(div9, t26);
			append_dev(div9, div8);
			append_dev(div8, img1);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(watchicon.$$.fragment, local);
			transition_in(globeicon.$$.fragment, local);
			transition_in(usersicon.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(watchicon.$$.fragment, local);
			transition_out(globeicon.$$.fragment, local);
			transition_out(usersicon.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(div10);
			destroy_component(watchicon);
			destroy_component(globeicon);
			destroy_component(usersicon);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("About", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<About> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ WatchIcon, GlobeIcon, UsersIcon });
	return [];
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment.name
		});
	}
}

export default About;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWJvdXQuNTRiOTUwYmUuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdmVsdGUtZmVhdGhlci1pY29ucy9zcmMvaWNvbnMvR2xvYmVJY29uLnN2ZWx0ZSIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdmVsdGUtZmVhdGhlci1pY29ucy9zcmMvaWNvbnMvVXNlcnNJY29uLnN2ZWx0ZSIsIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9zdmVsdGUtZmVhdGhlci1pY29ucy9zcmMvaWNvbnMvV2F0Y2hJY29uLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuICBleHBvcnQgbGV0IHNpemUgPSBcIjEwMCVcIjtcbiAgZXhwb3J0IGxldCBzdHJva2VXaWR0aCA9IDI7XG4gIGxldCBjdXN0b21DbGFzcyA9IFwiXCI7XG4gIGV4cG9ydCB7IGN1c3RvbUNsYXNzIGFzIGNsYXNzIH07XG5cbiAgaWYgKHNpemUgIT09IFwiMTAwJVwiKSB7XG4gICAgc2l6ZSA9IHNpemUuc2xpY2UoLTEpID09PSAneCcgXG4gICAgICAgICAgPyBzaXplLnNsaWNlKDAsIHNpemUubGVuZ3RoIC0xKSArICdlbSdcbiAgICAgICAgICA6IHBhcnNlSW50KHNpemUpICsgJ3B4JztcbiAgfVxuPC9zY3JpcHQ+XG5cbjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPXtzaXplfSBoZWlnaHQ9e3NpemV9IGZpbGw9XCJub25lXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiICBzdHJva2U9XCJjdXJyZW50Q29sb3JcIiBzdHJva2Utd2lkdGg9XCJ7c3Ryb2tlV2lkdGh9XCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCIgY2xhc3M9XCJmZWF0aGVyIGZlYXRoZXItZ2xvYmUge2N1c3RvbUNsYXNzfVwiPjxjaXJjbGUgY3g9XCIxMlwiIGN5PVwiMTJcIiByPVwiMTBcIj48L2NpcmNsZT48bGluZSB4MT1cIjJcIiB5MT1cIjEyXCIgeDI9XCIyMlwiIHkyPVwiMTJcIj48L2xpbmU+PHBhdGggZD1cIk0xMiAyYTE1LjMgMTUuMyAwIDAgMSA0IDEwIDE1LjMgMTUuMyAwIDAgMS00IDEwIDE1LjMgMTUuMyAwIDAgMS00LTEwIDE1LjMgMTUuMyAwIDAgMSA0LTEwelwiPjwvcGF0aD48L3N2Zz5cbiIsIjxzY3JpcHQ+XG4gIGV4cG9ydCBsZXQgc2l6ZSA9IFwiMTAwJVwiO1xuICBleHBvcnQgbGV0IHN0cm9rZVdpZHRoID0gMjtcbiAgbGV0IGN1c3RvbUNsYXNzID0gXCJcIjtcbiAgZXhwb3J0IHsgY3VzdG9tQ2xhc3MgYXMgY2xhc3MgfTtcblxuICBpZiAoc2l6ZSAhPT0gXCIxMDAlXCIpIHtcbiAgICBzaXplID0gc2l6ZS5zbGljZSgtMSkgPT09ICd4JyBcbiAgICAgICAgICA/IHNpemUuc2xpY2UoMCwgc2l6ZS5sZW5ndGggLTEpICsgJ2VtJ1xuICAgICAgICAgIDogcGFyc2VJbnQoc2l6ZSkgKyAncHgnO1xuICB9XG48L3NjcmlwdD5cblxuPHN2ZyB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCIgd2lkdGg9e3NpemV9IGhlaWdodD17c2l6ZX0gZmlsbD1cIm5vbmVcIiB2aWV3Qm94PVwiMCAwIDI0IDI0XCIgIHN0cm9rZT1cImN1cnJlbnRDb2xvclwiIHN0cm9rZS13aWR0aD1cIntzdHJva2VXaWR0aH1cIiBzdHJva2UtbGluZWNhcD1cInJvdW5kXCIgc3Ryb2tlLWxpbmVqb2luPVwicm91bmRcIiBjbGFzcz1cImZlYXRoZXIgZmVhdGhlci11c2VycyB7Y3VzdG9tQ2xhc3N9XCI+PHBhdGggZD1cIk0xNyAyMXYtMmE0IDQgMCAwIDAtNC00SDVhNCA0IDAgMCAwLTQgNHYyXCI+PC9wYXRoPjxjaXJjbGUgY3g9XCI5XCIgY3k9XCI3XCIgcj1cIjRcIj48L2NpcmNsZT48cGF0aCBkPVwiTTIzIDIxdi0yYTQgNCAwIDAgMC0zLTMuODdcIj48L3BhdGg+PHBhdGggZD1cIk0xNiAzLjEzYTQgNCAwIDAgMSAwIDcuNzVcIj48L3BhdGg+PC9zdmc+XG4iLCI8c2NyaXB0PlxuICBleHBvcnQgbGV0IHNpemUgPSBcIjEwMCVcIjtcbiAgZXhwb3J0IGxldCBzdHJva2VXaWR0aCA9IDI7XG4gIGxldCBjdXN0b21DbGFzcyA9IFwiXCI7XG4gIGV4cG9ydCB7IGN1c3RvbUNsYXNzIGFzIGNsYXNzIH07XG5cbiAgaWYgKHNpemUgIT09IFwiMTAwJVwiKSB7XG4gICAgc2l6ZSA9IHNpemUuc2xpY2UoLTEpID09PSAneCcgXG4gICAgICAgICAgPyBzaXplLnNsaWNlKDAsIHNpemUubGVuZ3RoIC0xKSArICdlbSdcbiAgICAgICAgICA6IHBhcnNlSW50KHNpemUpICsgJ3B4JztcbiAgfVxuPC9zY3JpcHQ+XG5cbjxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiIHdpZHRoPXtzaXplfSBoZWlnaHQ9e3NpemV9IGZpbGw9XCJub25lXCIgdmlld0JveD1cIjAgMCAyNCAyNFwiICBzdHJva2U9XCJjdXJyZW50Q29sb3JcIiBzdHJva2Utd2lkdGg9XCJ7c3Ryb2tlV2lkdGh9XCIgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCIgY2xhc3M9XCJmZWF0aGVyIGZlYXRoZXItd2F0Y2gge2N1c3RvbUNsYXNzfVwiPjxjaXJjbGUgY3g9XCIxMlwiIGN5PVwiMTJcIiByPVwiN1wiPjwvY2lyY2xlPjxwb2x5bGluZSBwb2ludHM9XCIxMiA5IDEyIDEyIDEzLjUgMTMuNVwiPjwvcG9seWxpbmU+PHBhdGggZD1cIk0xNi41MSAxNy4zNWwtLjM1IDMuODNhMiAyIDAgMCAxLTIgMS44Mkg5LjgzYTIgMiAwIDAgMS0yLTEuODJsLS4zNS0zLjgzbS4wMS0xMC43bC4zNS0zLjgzQTIgMiAwIDAgMSA5LjgzIDFoNC4zNWEyIDIgMCAwIDEgMiAxLjgybC4zNSAzLjgzXCI+PC9wYXRoPjwvc3ZnPlxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7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
