import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, B as Button, v as validate_slots, e as element, C as create_component, a as space, t as text, b as claim_element, f as children, D as claim_component, h as claim_space, g as detach_dev, j as claim_text, k as attr_dev, l as add_location, m as insert_dev, E as mount_component, n as append_dev, L as noop, p as transition_in, q as transition_out, G as destroy_component } from './client.33602f97.js';
import { T as Title } from './Title.83727d68.js';
import { I as Inputfield } from './Inputfield.ce8264f6.js';
import { I as ImageUpload } from './ImageUpload.e684be51.js';

/* src/routes/settings/personal/index.svelte generated by Svelte v3.38.1 */
const file = "src/routes/settings/personal/index.svelte";

function create_fragment(ctx) {
	let div5;
	let title;
	let t0;
	let div0;
	let imageupload;
	let t1;
	let div1;
	let inputfield0;
	let t2;
	let inputfield1;
	let t3;
	let div2;
	let inputfield2;
	let t4;
	let inputfield3;
	let t5;
	let div3;
	let inputfield4;
	let t6;
	let div4;
	let a;
	let t7;
	let t8;
	let button;
	let current;

	title = new Title({
			props: { text: "Your Settings" },
			$$inline: true
		});

	imageupload = new ImageUpload({ $$inline: true });

	inputfield0 = new Inputfield({
			props: {
				placeholder: "Romanie",
				label: "firstname"
			},
			$$inline: true
		});

	inputfield1 = new Inputfield({
			props: {
				placeholder: "Delporte",
				label: "lastname"
			},
			$$inline: true
		});

	inputfield2 = new Inputfield({
			props: {
				placeholder: "Your password",
				label: "Your password",
				type: "password"
			},
			$$inline: true
		});

	inputfield3 = new Inputfield({
			props: {
				placeholder: "Test123",
				label: "Change password",
				type: "password"
			},
			$$inline: true
		});

	inputfield4 = new Inputfield({
			props: {
				placeholder: "romaniedelporte230@gmail.com",
				label: "Your Email"
			},
			$$inline: true
		});

	button = new Button({ props: { label: "Save" }, $$inline: true });

	const block = {
		c: function create() {
			div5 = element("div");
			create_component(title.$$.fragment);
			t0 = space();
			div0 = element("div");
			create_component(imageupload.$$.fragment);
			t1 = space();
			div1 = element("div");
			create_component(inputfield0.$$.fragment);
			t2 = space();
			create_component(inputfield1.$$.fragment);
			t3 = space();
			div2 = element("div");
			create_component(inputfield2.$$.fragment);
			t4 = space();
			create_component(inputfield3.$$.fragment);
			t5 = space();
			div3 = element("div");
			create_component(inputfield4.$$.fragment);
			t6 = space();
			div4 = element("div");
			a = element("a");
			t7 = text("Delete your account");
			t8 = space();
			create_component(button.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			div5 = claim_element(nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			claim_component(title.$$.fragment, div5_nodes);
			t0 = claim_space(div5_nodes);
			div0 = claim_element(div5_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			claim_component(imageupload.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			t1 = claim_space(div5_nodes);
			div1 = claim_element(div5_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			claim_component(inputfield0.$$.fragment, div1_nodes);
			t2 = claim_space(div1_nodes);
			claim_component(inputfield1.$$.fragment, div1_nodes);
			div1_nodes.forEach(detach_dev);
			t3 = claim_space(div5_nodes);
			div2 = claim_element(div5_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			claim_component(inputfield2.$$.fragment, div2_nodes);
			t4 = claim_space(div2_nodes);
			claim_component(inputfield3.$$.fragment, div2_nodes);
			div2_nodes.forEach(detach_dev);
			t5 = claim_space(div5_nodes);
			div3 = claim_element(div5_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			claim_component(inputfield4.$$.fragment, div3_nodes);
			div3_nodes.forEach(detach_dev);
			t6 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			a = claim_element(div4_nodes, "A", { href: true, class: true });
			var a_nodes = children(a);
			t7 = claim_text(a_nodes, "Delete your account");
			a_nodes.forEach(detach_dev);
			t8 = claim_space(div4_nodes);
			claim_component(button.$$.fragment, div4_nodes);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "personal_imageupload svelte-c5thk1");
			add_location(div0, file, 43, 2, 1239);
			attr_dev(div1, "class", "personal_personalInformation placeInput svelte-c5thk1");
			add_location(div1, file, 47, 2, 1359);
			attr_dev(div2, "class", "personal_change placeInput");
			add_location(div2, file, 51, 2, 1542);
			attr_dev(div3, "class", "personal_email");
			add_location(div3, file, 58, 2, 1778);
			attr_dev(a, "href", "/login");
			attr_dev(a, "class", "svelte-c5thk1");
			add_location(a, file, 62, 4, 1933);
			attr_dev(div4, "class", "personal_button svelte-c5thk1");
			add_location(div4, file, 61, 2, 1899);
			attr_dev(div5, "class", "personal marginSet");
			add_location(div5, file, 41, 0, 1171);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div5, anchor);
			mount_component(title, div5, null);
			append_dev(div5, t0);
			append_dev(div5, div0);
			mount_component(imageupload, div0, null);
			append_dev(div5, t1);
			append_dev(div5, div1);
			mount_component(inputfield0, div1, null);
			append_dev(div1, t2);
			mount_component(inputfield1, div1, null);
			append_dev(div5, t3);
			append_dev(div5, div2);
			mount_component(inputfield2, div2, null);
			append_dev(div2, t4);
			mount_component(inputfield3, div2, null);
			append_dev(div5, t5);
			append_dev(div5, div3);
			mount_component(inputfield4, div3, null);
			append_dev(div5, t6);
			append_dev(div5, div4);
			append_dev(div4, a);
			append_dev(a, t7);
			append_dev(div4, t8);
			mount_component(button, div4, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(title.$$.fragment, local);
			transition_in(imageupload.$$.fragment, local);
			transition_in(inputfield0.$$.fragment, local);
			transition_in(inputfield1.$$.fragment, local);
			transition_in(inputfield2.$$.fragment, local);
			transition_in(inputfield3.$$.fragment, local);
			transition_in(inputfield4.$$.fragment, local);
			transition_in(button.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(title.$$.fragment, local);
			transition_out(imageupload.$$.fragment, local);
			transition_out(inputfield0.$$.fragment, local);
			transition_out(inputfield1.$$.fragment, local);
			transition_out(inputfield2.$$.fragment, local);
			transition_out(inputfield3.$$.fragment, local);
			transition_out(inputfield4.$$.fragment, local);
			transition_out(button.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div5);
			destroy_component(title);
			destroy_component(imageupload);
			destroy_component(inputfield0);
			destroy_component(inputfield1);
			destroy_component(inputfield2);
			destroy_component(inputfield3);
			destroy_component(inputfield4);
			destroy_component(button);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots: slots = {}, $$scope } = $$props;
	validate_slots("Personal", slots, []);
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Personal> was created with unknown prop '${key}'`);
	});

	$$self.$capture_state = () => ({ Title, Inputfield, Button, ImageUpload });
	return [];
}

class Personal extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Personal",
			options,
			id: create_fragment.name
		});
	}
}

export default Personal;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguMGI0N2I3OTUuanMiLCJzb3VyY2VzIjpbXSwic291cmNlc0NvbnRlbnQiOltdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
